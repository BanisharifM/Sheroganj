{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar initialModal = \"\";\nexport var ModalStateContext = /*#__PURE__*/React.createContext(initialModal);\nexport var useModalState = function useModalState() {\n  _s();\n\n  return React.useContext(ModalStateContext);\n};\n\n_s(useModalState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport var ModalDispatchContext = /*#__PURE__*/React.createContext(_c = function _c() {});\n_c2 = ModalDispatchContext;\nexport var useModalDispatch = function useModalDispatch(modalName) {\n  _s2();\n\n  var dispatch = React.useContext(ModalDispatchContext);\n  return function () {\n    return dispatch(modalName);\n  };\n};\n\n_s2(useModalDispatch, \"kCU+r/6VuXUfg74P0SIOBSNFld8=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalDispatchContext$React.createContext\");\n$RefreshReg$(_c2, \"ModalDispatchContext\");","map":{"version":3,"sources":["/home/null/Desktop/Gitlab Projects/sheroganj/utils/contexts/ModalContext/index.ts"],"names":["React","initialModal","ModalStateContext","createContext","useModalState","useContext","ModalDispatchContext","useModalDispatch","modalName","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,IAAMC,YAAY,GAAG,EAArB;AACA,OAAO,IAAMC,iBAAiB,gBAAGF,KAAK,CAACG,aAAN,CAAiCF,YAAjC,CAA1B;AACP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA;;AAAA,SAAMJ,KAAK,CAACK,UAAN,CAAiBH,iBAAjB,CAAN;AAAA,CAAtB;;GAAME,a;;AACb,OAAO,IAAME,oBAAoB,gBAAGN,KAAK,CAACG,aAAN,MAAuE,cAAM,CAAE,CAA/E,CAA7B;MAAMG,oB;AACb,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAA4B;AAAA;;AAC1D,MAAMC,QAAQ,GAAGT,KAAK,CAACK,UAAN,CAAiBC,oBAAjB,CAAjB;AACA,SAAO;AAAA,WAAMG,QAAQ,CAACD,SAAD,CAAd;AAAA,GAAP;AACD,CAHM;;IAAMD,gB","sourcesContent":["import React from \"react\";\nimport {TModalNames} from \"./types\";\n\nconst initialModal = \"\";\nexport const ModalStateContext = React.createContext<TModalNames>(initialModal);\nexport const useModalState = () => React.useContext(ModalStateContext);\nexport const ModalDispatchContext = React.createContext<React.Dispatch<React.SetStateAction<TModalNames>>>(() => {});\nexport const useModalDispatch = (modalName: TModalNames) => {\n  const dispatch = React.useContext(ModalDispatchContext);\n  return () => dispatch(modalName);\n};\n"]},"metadata":{},"sourceType":"module"}