{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/null/Desktop/Gitlab Projects/sheroganj/components/main-site/Navbar/MobileMenuModal.tsx\";\nimport React from \"react\";\nimport { Button, Dialog, DialogContent, DialogTitle, Grid, Grow, IconButton, Typography } from \"@material-ui/core\";\nimport { images } from \"../../../constants/images\";\nimport { items, names } from \"./items\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useModalDispatch } from \"../../../utils/contexts/ModalContext\";\nconst useStyles = makeStyles(() => ({\n  dialogTitle: {\n    paddingLeft: 30,\n    paddingRight: 30,\n    paddingBottom: 20,\n    paddingTop: 57,\n    marginBottom: 22\n  },\n  appBarMobile: {\n    width: 56,\n    height: 56,\n    borderRadius: 27.5\n  },\n  menuTitle: {\n    fontSize: 18\n  },\n  appBarMobileBg: {\n    backgroundColor: \"rgba(0, 65, 109, 0.02)\"\n  },\n  closeIcon: {\n    width: 14,\n    height: 14\n  },\n  dialogContent: {\n    paddingLeft: 30,\n    paddingRight: 30\n  },\n  menuItemWrapper: {\n    marginBottom: 15\n  },\n  downloadButtonWrapper: {\n    marginTop: 61,\n    marginBottom: 41\n  }\n}));\nexport default function MobileMenuModal({\n  onClose,\n  open,\n  onItemClicked,\n  selectedElement\n}) {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: onClose,\n      fullScreen: true,\n      TransitionComponent: Grow,\n      transitionDuration: 400,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        className: classes.dialogTitle,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          wrap: \"nowrap\",\n          justify: \"space-between\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.appBarMobile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"secondary\",\n              className: `font-bold ${classes.menuTitle}`,\n              children: \"\\u0645\\u0646\\u0648\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.appBarMobile,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => onClose(),\n              className: `${classes.appBarMobile} ${classes.appBarMobileBg}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: images.base.close,\n                alt: \"close\",\n                className: classes.closeIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: classes.dialogContent,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          wrap: \"nowrap\",\n          alignItems: \"center\",\n          className: \"w-full\",\n          children: [names.map((value, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: `w-full last:mb-0 ${classes.menuItemWrapper}`,\n            children: /*#__PURE__*/_jsxDEV(MenuItem, {\n              title: value,\n              item: items[index],\n              onClick: item => {\n                onItemClicked(item);\n                onClose();\n              },\n              selected: selectedElement === items[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.downloadButtonWrapper,\n            children: /*#__PURE__*/_jsxDEV(DownloadButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\nconst useStyles2 = makeStyles(() => ({\n  container: {\n    height: 70,\n    borderRadius: 15,\n    backgroundColor: \"rgba(0, 65, 109, 0.02)\"\n  },\n  menuTitle: {\n    fontSize: 16\n  }\n}));\n\nconst MenuItem = ({\n  title,\n  selected,\n  onClick,\n  item\n}) => {\n  const classes = useStyles2();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.container,\n    onClick: () => onClick(item),\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: `${classes.menuTitle} ${selected ? \"font-bold\" : \"font-medium\"}`,\n        color: selected ? \"primary\" : \"secondary\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\nconst useStyles3 = makeStyles(theme => ({\n  root: {\n    width: 224,\n    height: 60,\n    borderRadius: 35,\n    boxShadow: \"0 0 30px 0 rgba(247, 180, 110, 0.3)\",\n    backgroundColor: theme.palette.primary.main\n  }\n}));\n\nconst DownloadButton = () => {\n  const classes = useStyles3();\n  const openModal = useModalDispatch(\"download-app\");\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    className: `${classes.root} font-bold text-text-secondary`,\n    onClick: openModal,\n    children: \"\\u062F\\u0627\\u0646\\u0644\\u0648\\u062F \\u0627\\u067E\\u0644\\u06CC\\u06A9\\u06CC\\u0634\\u0646 \\\"\\u0634\\u0639\\u0631 \\u0648 \\u06AF\\u0646\\u062C\\\"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/null/Desktop/Gitlab Projects/sheroganj/components/main-site/Navbar/MobileMenuModal.tsx"],"names":["React","Button","Dialog","DialogContent","DialogTitle","Grid","Grow","IconButton","Typography","images","items","names","makeStyles","useModalDispatch","useStyles","dialogTitle","paddingLeft","paddingRight","paddingBottom","paddingTop","marginBottom","appBarMobile","width","height","borderRadius","menuTitle","fontSize","appBarMobileBg","backgroundColor","closeIcon","dialogContent","menuItemWrapper","downloadButtonWrapper","marginTop","MobileMenuModal","onClose","open","onItemClicked","selectedElement","classes","base","close","map","value","index","item","useStyles2","container","MenuItem","title","selected","onClick","useStyles3","theme","root","boxShadow","palette","primary","main","DownloadButton","openModal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Dialog, DialogContent, DialogTitle, Grid, Grow, IconButton, Typography} from \"@material-ui/core\";\nimport {images} from \"../../../constants/images\";\nimport {items, names} from \"./items\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useModalDispatch} from \"../../../utils/contexts/ModalContext\";\n\ninterface IMobileMenuModalProps {\n  open: boolean;\n  onClose: () => void;\n  onItemClicked: (item: typeof items[number]) => void;\n  selectedElement: typeof items[number];\n}\n\nconst useStyles = makeStyles(() => ({\n  dialogTitle: {\n    paddingLeft: 30,\n    paddingRight: 30,\n    paddingBottom: 20,\n    paddingTop: 57,\n    marginBottom: 22,\n  },\n  appBarMobile: {\n    width: 56,\n    height: 56,\n    borderRadius: 27.5,\n  },\n  menuTitle: {\n    fontSize: 18,\n  },\n  appBarMobileBg: {\n    backgroundColor: \"rgba(0, 65, 109, 0.02)\",\n  },\n  closeIcon: {\n    width: 14,\n    height: 14,\n  },\n  dialogContent: {\n    paddingLeft: 30,\n    paddingRight: 30,\n  },\n  menuItemWrapper: {\n    marginBottom: 15,\n  },\n  downloadButtonWrapper: {\n    marginTop: 61,\n    marginBottom: 41,\n  },\n}));\n\nexport default function MobileMenuModal({onClose, open, onItemClicked, selectedElement}: IMobileMenuModalProps) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Dialog open={open} onClose={onClose} fullScreen TransitionComponent={Grow} transitionDuration={400}>\n        <DialogTitle className={classes.dialogTitle}>\n          <Grid container wrap='nowrap' justify='space-between' alignItems='center'>\n            <Grid item className={classes.appBarMobile} />\n            <Grid item>\n              <Typography color='secondary' className={`font-bold ${classes.menuTitle}`}>\n                منو\n              </Typography>\n            </Grid>\n            <Grid item className={classes.appBarMobile}>\n              <IconButton onClick={() => onClose()} className={`${classes.appBarMobile} ${classes.appBarMobileBg}`}>\n                <img src={images.base.close} alt='close' className={classes.closeIcon} />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </DialogTitle>\n        <DialogContent className={classes.dialogContent}>\n          <Grid container direction='column' wrap='nowrap' alignItems='center' className='w-full'>\n            {names.map((value, index) => (\n              <Grid item className={`w-full last:mb-0 ${classes.menuItemWrapper}`} key={index}>\n                <MenuItem\n                  title={value}\n                  item={items[index]}\n                  onClick={(item) => {\n                    onItemClicked(item);\n                    onClose();\n                  }}\n                  selected={selectedElement === items[index]}\n                />\n              </Grid>\n            ))}\n            <Grid item className={classes.downloadButtonWrapper}>\n              <DownloadButton />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\ninterface IMenuItemProps {\n  title: string;\n  selected: boolean;\n  onClick: (item: typeof items[number]) => void;\n  item: typeof items[number];\n}\n\nconst useStyles2 = makeStyles(() => ({\n  container: {\n    height: 70,\n    borderRadius: 15,\n    backgroundColor: \"rgba(0, 65, 109, 0.02)\",\n  },\n  menuTitle: {\n    fontSize: 16,\n  },\n}));\n\nconst MenuItem = ({title, selected, onClick, item}: IMenuItemProps) => {\n  const classes = useStyles2();\n  return (\n    <Grid\n      container\n      wrap='nowrap'\n      justify='center'\n      alignItems='center'\n      className={classes.container}\n      onClick={() => onClick(item)}\n    >\n      <Grid item>\n        <Typography\n          className={`${classes.menuTitle} ${selected ? \"font-bold\" : \"font-medium\"}`}\n          color={selected ? \"primary\" : \"secondary\"}\n        >\n          {title}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles3 = makeStyles((theme) => ({\n  root: {\n    width: 224,\n    height: 60,\n    borderRadius: 35,\n    boxShadow: \"0 0 30px 0 rgba(247, 180, 110, 0.3)\",\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nconst DownloadButton = () => {\n  const classes = useStyles3();\n  const openModal = useModalDispatch(\"download-app\");\n\n  return (\n    <Button variant='contained' className={`${classes.root} font-bold text-text-secondary`} onClick={openModal}>\n      دانلود اپلیکیشن \"شعر و گنج\"\n    </Button>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}