{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/null/Desktop/Gitlab Projects/sheroganj/components/main-site/Teaching/VideoCard.tsx\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport VideoSvg from \"./VideoSvg\";\nconst useStyles = makeStyles(theme => ({\n  video_card: {\n    width: \"248px\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"713px\"\n    }\n  },\n  video_container: {\n    width: \"248px\",\n    height: \"140px\",\n    backgroundColor: \"#00416d\",\n    borderRadius: \"10.6px\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"700px\",\n      height: \"394px\"\n    }\n  },\n  video_border: {\n    width: \"255px\",\n    height: \"147px\",\n    borderRadius: \"10.6px\",\n    marginTop: \"14px\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"720px\",\n      height: \"414px\",\n      marginTop: \"25px\" // marginLeft:'60px'\n\n    }\n  },\n  video_title: {\n    fontSize: \"16px\",\n    [theme.breakpoints.up(\"md\")]: {\n      fontSize: \"21px\",\n      marginTop: \"70px\"\n    }\n  },\n  video_icon: {\n    width: \"50px\",\n    height: \"50px\",\n    backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n    backdropFilter: \"blur(15px)\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"120px\",\n      height: \"120px\"\n    }\n  }\n}));\n\nconst VideoCard = ({\n  className,\n  title,\n  src\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${className} ${classes.video_card} \n    mx-auto\n    `,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `text-primary-main ${classes.video_title} font-medium block md:hidden`,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.video_border}  flex justify-center items-center bg-white video`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.video_container} overflow-hidden relative `,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${classes.video_icon}  rounded-full flex justify-center items-center absolute \n            transform -translate-y-1/2 translate-x-1/2 top-1/2 right-1/2`,\n          children: /*#__PURE__*/_jsxDEV(VideoSvg, {\n            width: !matches ? \"14px\" : \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"h-full\",\n          src: src,\n          poster: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `text-primary-main ${classes.video_title} font-medium hidden md:block text-center`,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\nexport default VideoCard;","map":{"version":3,"sources":["/home/null/Desktop/Gitlab Projects/sheroganj/components/main-site/Teaching/VideoCard.tsx"],"names":["useMediaQuery","makeStyles","useTheme","React","VideoSvg","useStyles","theme","video_card","width","breakpoints","up","video_container","height","backgroundColor","borderRadius","video_border","marginTop","video_title","fontSize","video_icon","backdropFilter","VideoCard","className","title","src","classes","matches"],"mappings":"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","sourcesContent":["import {useMediaQuery} from \"@material-ui/core\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport VideoSvg from \"./VideoSvg\";\n\nconst useStyles = makeStyles((theme) => ({\n  video_card: {\n    width: \"248px\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"713px\",\n    },\n  },\n  video_container: {\n    width: \"248px\",\n    height: \"140px\",\n    backgroundColor: \"#00416d\",\n    borderRadius: \"10.6px\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"700px\",\n      height: \"394px\",\n    },\n  },\n  video_border: {\n    width: \"255px\",\n    height: \"147px\",\n    borderRadius: \"10.6px\",\n    marginTop: \"14px\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"720px\",\n      height: \"414px\",\n      marginTop: \"25px\",\n      // marginLeft:'60px'\n    },\n  },\n  video_title: {\n    fontSize: \"16px\",\n    [theme.breakpoints.up(\"md\")]: {\n      fontSize: \"21px\",\n      marginTop: \"70px\",\n    },\n  },\n  video_icon: {\n    width: \"50px\",\n    height: \"50px\",\n    backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n    backdropFilter: \"blur(15px)\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"120px\",\n      height: \"120px\",\n    },\n  },\n}));\ninterface IVideoProps {\n  className?: string;\n  title: string;\n  src: string;\n}\nconst VideoCard: React.FC<IVideoProps> = ({className, title, src}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n  return (\n    <div\n      className={`${className} ${classes.video_card} \n    mx-auto\n    `}\n    >\n      <p className={`text-primary-main ${classes.video_title} font-medium block md:hidden`}>{title}</p>\n      <div className={`${classes.video_border}  flex justify-center items-center bg-white video`}>\n        <div className={`${classes.video_container} overflow-hidden relative `}>\n          <span\n            className={`${classes.video_icon}  rounded-full flex justify-center items-center absolute \n            transform -translate-y-1/2 translate-x-1/2 top-1/2 right-1/2`}\n          >\n            <VideoSvg width={!matches ? \"14px\" : \"30px\"} />\n          </span>\n          <video className='h-full' src={src} poster=''></video>\n        </div>\n      </div>\n      <p className={`text-primary-main ${classes.video_title} font-medium hidden md:block text-center`}>{title}</p>\n    </div>\n  );\n};\n\nexport default VideoCard;\n"]},"metadata":{},"sourceType":"module"}