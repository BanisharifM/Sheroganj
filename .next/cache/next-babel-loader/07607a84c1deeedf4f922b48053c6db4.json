{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/null/Desktop/University/8th/\\u0645\\u0628\\u0627\\u062D\\u062B \\u0648\\u06CC\\u0698\\u0647/Project/Frontend/sheroganj/components/main-site/BestInviters/ScrollBar.tsx\";\nimport { makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useRef } from \"react\";\nconst useStyles = makeStyles(theme => ({\n  scroll_container: {\n    width: \"200px\",\n    height: \"10px\",\n    borderRadius: \"5px\",\n    [theme.breakpoints.up(\"md\")]: {\n      marginTop: \"30px\"\n    }\n  },\n  scroll: {\n    width: \"98px\",\n    borderRadius: \"5px\",\n    height: \"6px\"\n  }\n}));\n\nconst ScrollBar = ({\n  sliderRef,\n  value,\n  onChangeValue,\n  range\n}) => {\n  const classes = useStyles();\n  const clicked = useRef(false);\n  const currentValue = useRef(value);\n  const bar = useRef(null);\n  useEffect(() => {\n    currentValue.current = value;\n  }, [value]);\n  const step = (200 - 98) / range;\n\n  const handleStart = () => {\n    console.log(\"start\");\n\n    const handleEnd = () => {\n      console.log(\"end\");\n      clicked.current = false;\n    };\n\n    clicked.current = true;\n    window.addEventListener(\"mouseup\", handleEnd, {\n      once: true\n    });\n    window.addEventListener(\"touchend\", handleEnd, {\n      once: true\n    });\n  };\n\n  useEffect(() => {\n    const getHandlePositionFromMousePosition = mousePosition => {\n      var _bar$current;\n\n      return Math.min(Math.max(Math.floor((((_bar$current = bar.current) === null || _bar$current === void 0 ? void 0 : _bar$current.getBoundingClientRect().left) + 200 - mousePosition) / step), 0), range);\n    };\n\n    const handleMouseEventListener = e => {\n      const clientX = e.type === \"touchmove\" ? e.touches[0].clientX : e.clientX;\n\n      if (clicked.current) {\n        const newPosition = getHandlePositionFromMousePosition(clientX);\n        onChangeValue(newPosition);\n\n        if (currentValue.current !== newPosition) {\n          var _sliderRef$current;\n\n          (_sliderRef$current = sliderRef.current) === null || _sliderRef$current === void 0 ? void 0 : _sliderRef$current.slickGoTo(newPosition);\n        }\n      }\n    };\n\n    document.addEventListener(\"touchmove\", handleMouseEventListener);\n    document.addEventListener(\"mousemove\", handleMouseEventListener);\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseEventListener);\n    };\n  }, [sliderRef, onChangeValue, range, step]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: bar,\n    className: `${classes.scroll_container} \n      bg-white  relative mx-auto`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        transition: \"transform 0.1s\",\n        transform: `translate( -${value * step}px, -50%)`\n      },\n      onPointerDown: handleStart,\n      className: `${classes.scroll} absolute bg-primary-main top-1/2  `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ScrollBar;","map":{"version":3,"sources":["/home/null/Desktop/University/8th/مباحث ویژه/Project/Frontend/sheroganj/components/main-site/BestInviters/ScrollBar.tsx"],"names":["makeStyles","React","useEffect","useRef","useStyles","theme","scroll_container","width","height","borderRadius","breakpoints","up","marginTop","scroll","ScrollBar","sliderRef","value","onChangeValue","range","classes","clicked","currentValue","bar","current","step","handleStart","console","log","handleEnd","window","addEventListener","once","getHandlePositionFromMousePosition","mousePosition","Math","min","max","floor","getBoundingClientRect","left","handleMouseEventListener","e","clientX","type","touches","newPosition","slickGoTo","document","removeEventListener","transition","transform"],"mappings":"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","sourcesContent":["import {makeStyles, Theme} from \"@material-ui/core\";\nimport React, {useEffect, useRef} from \"react\";\nimport Slider from \"react-slick\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  scroll_container: {\n    width: \"200px\",\n    height: \"10px\",\n    borderRadius: \"5px\",\n    [theme.breakpoints.up(\"md\")]: {\n      marginTop: \"30px\",\n    },\n  },\n  scroll: {\n    width: \"98px\",\n    borderRadius: \"5px\",\n    height: \"6px\",\n  },\n}));\ninterface IScrollBarProps {\n  sliderRef: React.RefObject<Slider>;\n  value: number;\n  onChangeValue: (newValue: number) => void;\n  range: number;\n}\n\nconst ScrollBar: React.FC<IScrollBarProps> = ({sliderRef, value, onChangeValue, range}) => {\n  const classes = useStyles();\n  const clicked = useRef(false);\n  const currentValue = useRef(value);\n  const bar = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    currentValue.current = value;\n  }, [value]);\n  const step = (200 - 98) / range;\n  const handleStart = () => {\n    console.log(\"start\");\n    const handleEnd = () => {\n      console.log(\"end\");\n      clicked.current = false;\n    };\n    clicked.current = true;\n    window.addEventListener(\"mouseup\", handleEnd, {once: true});\n    window.addEventListener(\"touchend\", handleEnd, {once: true});\n  };\n  useEffect(() => {\n    const getHandlePositionFromMousePosition = (mousePosition: number) => {\n      return Math.min(\n        Math.max(Math.floor((bar.current?.getBoundingClientRect().left! + 200 - mousePosition) / step), 0),\n        range\n      );\n    };\n    const handleMouseEventListener = (e: MouseEvent | TouchEvent) => {\n      const clientX = e.type === \"touchmove\" ? (e as TouchEvent).touches[0].clientX : (e as MouseEvent).clientX;\n      if (clicked.current) {\n        const newPosition = getHandlePositionFromMousePosition(clientX);\n        onChangeValue(newPosition);\n        if (currentValue.current !== newPosition) {\n          sliderRef.current?.slickGoTo(newPosition);\n        }\n      }\n    };\n\n    document.addEventListener(\"touchmove\", handleMouseEventListener);\n    document.addEventListener(\"mousemove\", handleMouseEventListener);\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseEventListener);\n    };\n  }, [sliderRef, onChangeValue, range, step]);\n\n  return (\n    <div\n      ref={bar}\n      className={`${classes.scroll_container} \n      bg-white  relative mx-auto`}\n    >\n      <div\n        style={{\n          transition: \"transform 0.1s\",\n          transform: `translate( -${value * step}px, -50%)`,\n        }}\n        onPointerDown={handleStart}\n        className={`${classes.scroll} absolute bg-primary-main top-1/2  `}\n      />\n    </div>\n  );\n};\n\nexport default ScrollBar;\n"]},"metadata":{},"sourceType":"module"}