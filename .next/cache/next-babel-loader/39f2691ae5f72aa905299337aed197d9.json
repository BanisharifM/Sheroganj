{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/null/Desktop/University/8th/\\u0645\\u0628\\u0627\\u062D\\u062B \\u0648\\u06CC\\u0698\\u0647/Project/Frontend/sheroganj/components/main-site/Navbar/NavBarWeb.tsx\";\nimport React from \"react\";\nimport { AppBar, Container, Grid, Link, Slide, Typography, useMediaQuery, useScrollTrigger } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { images } from \"../../../constants/images\";\nimport { useModalState } from \"../../../utils/contexts/ModalContext\";\nimport { items, names } from \"./items\";\nconst useStyles = makeStyles(theme => ({\n  rootContainer: {\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  container: {\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: 30,\n      paddingRight: 30\n    }\n  },\n  logo: {\n    width: 60,\n    height: 60\n  },\n  menuItem: {\n    marginBottom: 15,\n    marginLeft: \"calc((50 / 1440) * 100vw)\"\n  },\n  marginFixer: {\n    height: 150\n  }\n}));\nexport default function NavBarWeb({\n  onItemSelected,\n  selectedItem\n}) {\n  const classes = useStyles();\n  const topTrigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n  const h924 = useMediaQuery(\"@media (min-height:924px)\");\n  const [scrollDirection, setScrollDirection] = React.useState(\"up\");\n  React.useEffect(() => {\n    const wheelHandler = event => {\n      if (event.deltaY > 0) {\n        setScrollDirection(\"down\");\n      } else {\n        setScrollDirection(\"up\");\n      }\n    };\n\n    window.addEventListener(\"wheel\", wheelHandler);\n  }, []);\n  const modalClosed = useModalState() === \"\";\n  const selected = selectedItem === \"footer\" ? \"lottery\" : selectedItem;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Slide, {\n      appear: false,\n      direction: \"down\",\n      in: modalClosed && (h924 || scrollDirection === \"up\"),\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        className: `bg-white`,\n        elevation: topTrigger ? 4 : 0,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"lg\",\n          className: classes.container,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            wrap: \"nowrap\",\n            className: classes.rootContainer,\n            justify: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: images.base.logo,\n                alt: \"logo\",\n                className: classes.logo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              wrap: \"nowrap\",\n              justify: \"space-between\",\n              className: \"w-fit\",\n              children: names.map((value, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                className: `w-full last:mb-0 last:ml-0 ${classes.menuItem}`,\n                children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                  title: value,\n                  item: items[index],\n                  onClick: item => onItemSelected(item),\n                  selected: selected === items[index]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\nconst useStyles2 = makeStyles(() => ({\n  itemText: {\n    fontSize: 16\n  },\n  itemMigrate: {\n    \"&>div:nth-child(2)\": {\n      width: ({\n        selected\n      }) => selected ? 20 : 0,\n      transition: \"width 0.2s\",\n      height: 2\n    },\n    \"&:hover\": {\n      \"&>div:nth-child(2)\": {\n        width: 20\n      }\n    }\n  }\n}));\n\nconst MenuItem = ({\n  title,\n  selected,\n  item,\n  onClick\n}) => {\n  const classes = useStyles2({\n    selected\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    direction: \"column\",\n    onClick: () => onClick(item),\n    component: Link,\n    href: `#${item}`,\n    className: classes.itemMigrate,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: selected ? \"primary\" : \"secondary\",\n        className: `${classes.itemText}`,\n        noWrap: true,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: `${selected ? \"bg-Primary\" : \"bg-Secondary\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/null/Desktop/University/8th/مباحث ویژه/Project/Frontend/sheroganj/components/main-site/Navbar/NavBarWeb.tsx"],"names":["React","AppBar","Container","Grid","Link","Slide","Typography","useMediaQuery","useScrollTrigger","makeStyles","images","useModalState","items","names","useStyles","theme","rootContainer","paddingTop","paddingBottom","container","breakpoints","down","paddingLeft","paddingRight","logo","width","height","menuItem","marginBottom","marginLeft","marginFixer","NavBarWeb","onItemSelected","selectedItem","classes","topTrigger","disableHysteresis","threshold","h924","scrollDirection","setScrollDirection","useState","useEffect","wheelHandler","event","deltaY","window","addEventListener","modalClosed","selected","base","map","value","index","item","useStyles2","itemText","fontSize","itemMigrate","transition","MenuItem","title","onClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {AppBar, Container, Grid, Link, Slide, Typography, useMediaQuery, useScrollTrigger} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {images} from \"../../../constants/images\";\nimport {useModalState} from \"../../../utils/contexts/ModalContext\";\nimport {INavBarProps} from \"./index\";\nimport {items, names} from \"./items\";\n\nconst useStyles = makeStyles((theme) => ({\n  rootContainer: {\n    paddingTop: 20,\n    paddingBottom: 20,\n  },\n  container: {\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: 30,\n      paddingRight: 30,\n    },\n  },\n  logo: {\n    width: 60,\n    height: 60,\n  },\n  menuItem: {\n    marginBottom: 15,\n    marginLeft: \"calc((50 / 1440) * 100vw)\",\n  },\n  marginFixer: {\n    height: 150,\n  },\n}));\n\nexport default function NavBarWeb({onItemSelected, selectedItem}: INavBarProps) {\n  const classes = useStyles();\n  const topTrigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  const h924 = useMediaQuery(\"@media (min-height:924px)\");\n\n  const [scrollDirection, setScrollDirection] = React.useState<\"down\" | \"up\">(\"up\");\n\n  React.useEffect(() => {\n    const wheelHandler = (event: WheelEvent) => {\n      if (event.deltaY > 0) {\n        setScrollDirection(\"down\");\n      } else {\n        setScrollDirection(\"up\");\n      }\n    };\n    window.addEventListener(\"wheel\", wheelHandler);\n  }, []);\n\n  const modalClosed = useModalState() === \"\";\n\n  const selected = selectedItem === \"footer\" ? \"lottery\" : selectedItem;\n\n  return (\n    <>\n      <Slide appear={false} direction='down' in={modalClosed && (h924 || scrollDirection === \"up\")}>\n        <AppBar className={`bg-white`} elevation={topTrigger ? 4 : 0}>\n          <Container maxWidth='lg' className={classes.container}>\n            <Grid container wrap='nowrap' className={classes.rootContainer} justify='space-between' alignItems='center'>\n              <Grid item>\n                <img src={images.base.logo} alt='logo' className={classes.logo} />\n              </Grid>\n              <Grid item container wrap='nowrap' justify='space-between' className='w-fit'>\n                {names.map((value, index) => (\n                  <Grid item className={`w-full last:mb-0 last:ml-0 ${classes.menuItem}`} key={index}>\n                    <MenuItem\n                      title={value}\n                      item={items[index]}\n                      onClick={(item) => onItemSelected(item)}\n                      selected={selected === items[index]}\n                    />\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n          </Container>\n        </AppBar>\n      </Slide>\n      {/*<div className={classes.marginFixer} />*/}\n    </>\n  );\n}\n\ninterface IMenuItemProps {\n  title: string;\n  selected: boolean;\n  onClick: (item: typeof items[number]) => void;\n  item: typeof items[number];\n}\n\nconst useStyles2 = makeStyles(() => ({\n  itemText: {\n    fontSize: 16,\n  },\n  itemMigrate: {\n    \"&>div:nth-child(2)\": {\n      width: ({selected}: {selected: boolean}) => (selected ? 20 : 0),\n      transition: \"width 0.2s\",\n      height: 2,\n    },\n    \"&:hover\": {\n      \"&>div:nth-child(2)\": {\n        width: 20,\n      },\n    },\n  },\n}));\n\nconst MenuItem = ({title, selected, item, onClick}: IMenuItemProps) => {\n  const classes = useStyles2({selected});\n  return (\n    <Grid\n      container\n      wrap='nowrap'\n      direction='column'\n      onClick={() => onClick(item)}\n      component={Link}\n      href={`#${item}`}\n      className={classes.itemMigrate}\n    >\n      <Grid item>\n        <Typography color={selected ? \"primary\" : \"secondary\"} className={`${classes.itemText}`} noWrap>\n          {title}\n        </Typography>\n      </Grid>\n      <Grid item className={`${selected ? \"bg-Primary\" : \"bg-Secondary\"}`} />\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}